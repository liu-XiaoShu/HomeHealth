# Generated by Django 4.2.20 on 2025-03-22 02:30

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import records.models
import records.storage


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='MedicalRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('visit_date', models.DateField(default=django.utils.timezone.now, verbose_name='就诊日期')),
                ('hospital', models.CharField(default='未知医院', max_length=100, verbose_name='医院')),
                ('department', models.CharField(choices=[('internal', '内科'), ('surgery', '外科'), ('pediatrics', '儿科'), ('obstetrics', '妇产科'), ('ophthalmology', '眼科'), ('ent', '耳鼻喉科'), ('dental', '口腔科'), ('dermatology', '皮肤科'), ('psychiatry', '精神科'), ('tcm', '中医科')], default='internal', max_length=20, verbose_name='科室')),
                ('doctor', models.CharField(default='未知医生', max_length=50, verbose_name='医生')),
                ('chief_complaint', models.TextField(default='无', verbose_name='主诉')),
                ('diagnosis', models.TextField(default='待诊断', verbose_name='诊断结果')),
                ('treatment', models.TextField(default='待处理', verbose_name='处理方案')),
                ('follow_up_date', models.DateField(blank=True, null=True, verbose_name='复诊日期')),
                ('cost', models.DecimalField(decimal_places=2, default=0, max_digits=10, verbose_name='费用')),
                ('notes', models.TextField(blank=True, verbose_name='备注')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='创建时间')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='更新时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medical_records', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': '就医记录',
                'verbose_name_plural': '就医记录',
                'ordering': ['-visit_date'],
            },
        ),
        migrations.CreateModel(
            name='MedicalAttachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255, verbose_name='文件名')),
                ('file', models.FileField(upload_to='medical_records/', verbose_name='文件')),
                ('size', models.IntegerField(verbose_name='文件大小')),
                ('upload_time', models.DateTimeField(auto_now_add=True, verbose_name='上传时间')),
                ('record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='attachments', to='records.medicalrecord')),
            ],
            options={
                'verbose_name': '就医记录附件',
                'verbose_name_plural': '就医记录附件',
                'ordering': ['-upload_time'],
            },
        ),
        migrations.CreateModel(
            name='VaccinationRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('vaccine_type', models.CharField(choices=[('CV', '新冠疫苗'), ('FL', '流感疫苗'), ('HPV', 'HPV疫苗'), ('HB', '乙肝疫苗')], max_length=3, verbose_name='疫苗类型')),
                ('dose_number', models.PositiveSmallIntegerField(help_text='当前接种的是第几剂', verbose_name='剂次')),
                ('vaccination_date', models.DateField(verbose_name='接种日期')),
                ('next_due_date', models.DateField(blank=True, null=True, verbose_name='下次接种日期')),
                ('institution', models.CharField(max_length=200, verbose_name='接种机构')),
                ('batch_number', models.CharField(max_length=50, verbose_name='疫苗批号')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='vaccinations', to=settings.AUTH_USER_MODEL, verbose_name='接种用户')),
            ],
            options={
                'verbose_name': '疫苗接种记录',
                'verbose_name_plural': '疫苗接种记录',
                'indexes': [models.Index(fields=['user', 'vaccine_type'], name='records_vac_user_id_181e6d_idx'), models.Index(fields=['vaccination_date'], name='records_vac_vaccina_91e80e_idx')],
                'unique_together': {('user', 'vaccine_type', 'dose_number')},
            },
        ),
        migrations.CreateModel(
            name='PhysicalExam',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('exam_date', models.DateField(verbose_name='体检日期')),
                ('height', models.DecimalField(decimal_places=1, max_digits=4, verbose_name='身高(cm)')),
                ('weight', models.DecimalField(decimal_places=1, max_digits=4, verbose_name='体重(kg)')),
                ('blood_pressure', models.CharField(help_text='格式：收缩压/舒张压 如：120/80', max_length=7, verbose_name='血压(mmHg)')),
                ('heart_rate', models.PositiveSmallIntegerField(verbose_name='心率(bpm)')),
                ('blood_glucose', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True, verbose_name='空腹血糖(mmol/L)')),
                ('cholesterol', models.DecimalField(blank=True, decimal_places=1, max_digits=4, null=True, verbose_name='总胆固醇(mmol/L)')),
                ('report_pdf', models.FileField(help_text='上传体检报告PDF文件（最大10MB，文件将被加密存储）', storage=records.storage.EncryptedFileStorage(), upload_to='physical_exams/%Y/%m/', validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['pdf']), records.models.validate_file_size, records.models.validate_file_name], verbose_name='体检报告PDF')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='上传时间')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='physical_exams', to=settings.AUTH_USER_MODEL, verbose_name='所属用户')),
            ],
            options={
                'verbose_name': '体检报告',
                'verbose_name_plural': '体检报告',
                'ordering': ['-exam_date'],
                'indexes': [models.Index(fields=['user', 'exam_date'], name='records_phy_user_id_a91fd1_idx'), models.Index(fields=['created_at'], name='records_phy_created_7f758e_idx')],
            },
            bases=(records.models.AuditModelMixin, models.Model),
        ),
        migrations.CreateModel(
            name='MedicationRecord',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('drug_name', models.CharField(max_length=100, verbose_name='药品名称')),
                ('dosage', models.CharField(help_text='例如：500mg/片', max_length=50, verbose_name='剂量规格')),
                ('frequency', models.CharField(choices=[('QD', '每日一次'), ('BID', '每日两次'), ('TID', '每日三次'), ('QW', '每周一次'), ('PRN', '按需服用')], default='QD', max_length=3, verbose_name='用药频率')),
                ('start_date', models.DateField(verbose_name='开始日期')),
                ('end_date', models.DateField(blank=True, null=True, verbose_name='结束日期')),
                ('reminder_enabled', models.BooleanField(default=False, verbose_name='启用提醒')),
                ('reminder_time', models.TimeField(blank=True, null=True, verbose_name='提醒时间')),
                ('medical_record', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='medications', to='records.medicalrecord', verbose_name='关联医疗记录')),
            ],
            options={
                'verbose_name': '用药记录',
                'verbose_name_plural': '用药记录',
                'ordering': ['-start_date'],
                'indexes': [models.Index(fields=['medical_record'], name='records_med_medical_fc0e94_idx'), models.Index(fields=['drug_name'], name='records_med_drug_na_ff249b_idx'), models.Index(fields=['start_date', 'end_date'], name='records_med_start_d_42006d_idx')],
            },
        ),
    ]
